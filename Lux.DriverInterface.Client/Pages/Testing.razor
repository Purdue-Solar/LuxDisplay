@page "/testing"
@using BlazorBootstrap;
@using Lux.DriverInterface.Shared;
@using static Lux.DriverInterface.Shared.Shared;
@inject Encoder amt
@inject WaveSculptor ws
@inject BackgroundDataService backgroundData
@inject NavigationManager NavigationManager
@inject HttpClient http

<PageTitle>Testing</PageTitle>
<Header />

@code
{

	protected CancellationTokenSource CancellationSource { get; } = new();

	// Not called On page change, but called when the component is no longer needed
	public void Dispose()
	{
		CancellationSource.Cancel();
		backgroundData.OnChange -= StateHasChanged;

		NavigationManager.LocationChanged -= OnLocationChanged;
		CancellationSource.Dispose();
	}
	protected override async void OnInitialized()
	{
		backgroundData.OnChange += StateHasChanged;
		await backgroundData.StartAsync(CancellationSource.Token);

		NavigationManager.LocationChanged += OnLocationChanged;
	}

	protected void OnLocationChanged(object sender, LocationChangedEventArgs args)
	{
		NavigationManager.LocationChanged -= OnLocationChanged;
		string navigationMethod = args.IsNavigationIntercepted ? "HTML" : "code";
	}
}
