@page "/Notes"
@inject NavigationManager NavigationManager;
@inject BackgroundDataService backgroundData;
@using BlazorBootstrap;
@using Lux.DriverInterface.Shared;


<PageTitle>Lux Dashboard - Notes</PageTitle>
<Header />
<h1 class="center-line">Notes</h1>

Regular Note Size<br>
1. Item 1

<Callout Type = "CalloutType.Info" Heading="Important">
    Remember to declerate around 3 pm to conserve power.
</Callout>

<Callout Type="CalloutType.Warning" Heading="Warning">
    <strong>Need to change drivers in 10 minutes</strong>.
</Callout>

<Callout Type="CalloutType.Danger" Heading="Danger">
    <strong>Signs of thunder around 5 pm</strong>: Stop around 4:45 pm for safety.
</Callout>

<Callout>
    <h4>Large Notes</h4>
    <p>Check the motor rpm in the <code>Motor</code> sidepanel every 5 minutes.</p>
</Callout>

@code
{
    protected CancellationTokenSource CancellationSource = new();

    // Don't forget to unsubscribe from the event when the component is disposed.
    public void Dispose()
    {
        CancellationSource.Cancel();
        backgroundData.OnChange -= StateHasChanged;

        CancellationSource.Dispose();
    }
    protected override async void OnInitialized()
    {
        backgroundData.OnChange += StateHasChanged;
        await backgroundData.StartAsync(CancellationSource.Token);

        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected void OnLocationChanged(object sender, LocationChangedEventArgs args)
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        string navigationMethod = args.IsNavigationIntercepted ? "HTML" : "code";
    }
}